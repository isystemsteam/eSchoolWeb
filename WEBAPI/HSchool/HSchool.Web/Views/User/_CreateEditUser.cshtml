@model HSchool.Business.Models.UserCreateModel
@{string disableControl = Model.IsEditable ? string.Empty : " disableField";}
<div class="form-container">
    <div class="row custom-row clearfix">
        <div class="col-md-12 custom-text">
            @Html.DropDownListFor(m => m.UserRole, Model.ListRoles, new { @id = "ddlUserRoles", @class = "selectpicker show-tick required " + disableControl })
        </div>
    </div>
    <div class="row custom-row clearfix">
        <div class="col-md-4 custom-text">
            @if (Model.IsEditable)
            {
                @Html.DropDownListFor(m => m.Title, Model.ListTitles, new { @id = "ddlUserTitles", @class = "selectpicker show-tick required " + disableControl })
                <i class="fa validationResult"></i>
            }
            else
            {
                <label>Title</label>
                @Html.TextBoxFor(m => m.TitleDisplay, new { @class = disableControl })
            }
        </div>
        <div class="col-md-4 custom-text">
            @Html.LabelFor(m => m.FirstName)
            @Html.TextBoxFor(m => m.FirstName, new { @Id = "txtFirstName", @class = "required" + disableControl, @maxlength = "120" })
            <i class="fa validationResult"></i>
        </div>
        <div class="col-md-4 custom-text">
            @Html.LabelFor(m => m.LastName)
            @Html.TextBoxFor(m => m.LastName, new { @Id = "txtLastName", @class = "required" + disableControl, @maxlength = "120" })
            <i class="fa validationResult"></i>
        </div>
    </div>
    <div class="row custom-row clearfix">
        <div class="col-md-4 custom-text">
            @if (Model.IsEditable)
            {
                @Html.DropDownListFor(m => m.Gender, Model.ListGender, new { @id = "", @class = "selectpicker show-tick required" })
                <i class="fa validationResult"></i>
            }
            else
            {
                <label>Gender</label>
                @Html.TextBoxFor(m => m.GenderDisplay, new { @class = disableControl })
            }
        </div>
        <div class="col-md-4 custom-text">
            @Html.LabelFor(m => m.DateOfBirth)
            @Html.TextBoxFor(m => m.DateOfBirth, new { @Id = "txtDateOfBirth", @class = "datepicker required" + disableControl })
            <i class="fa validationResult"></i>
        </div>
        <div class="col-md-4 custom-text">
            @Html.LabelFor(m => m.PlaceOfBirth)
            @Html.TextBoxFor(m => m.PlaceOfBirth, new { @Id = "txtPlaceOfBirth required", @maxlength = "120", @class = "" + disableControl })
            <i class="fa validationResult"></i>
        </div>
    </div>
    <div class="row custom-row clearfix">
        <div class="col-md-6 custom-text">
            @Html.LabelFor(m => m.BloodGroup)
            @Html.TextBoxFor(m => m.BloodGroup, new { @Id = "txtBloodGroup", @class = "required" + disableControl, @maxlength = "10" })
            <i class="fa validationResult"></i>
        </div>
        <div class="col-md-6 custom-text">
            @if (Model.IsEditable)
            {
                @Html.DropDownListFor(m => m.MotherLanguage, Model.ListLanguages, new { @id = "", @class = "selectpicker show-tick required" })
                <i class="fa validationResult"></i>
            }
            else
            {
                <label>Mother Language</label>
                @Html.TextBoxFor(m => m.MotherLanguagetDisplay, new { @class = disableControl })
            }
        </div>
    </div>
    <div class="row custom-row clearfix">
        <div class="col-md-4 custom-text">
            @Html.LabelFor(m => m.Nationality)
            @Html.TextBoxFor(m => m.Nationality, new { @Id = "txtNationality", @class = "required", @maxlength = "50" })
            <i class="fa validationResult"></i>
        </div>
        <div class="col-md-4 custom-text">
            @Html.LabelFor(m => m.Religion)
            @Html.TextBoxFor(m => m.Religion, new { @Id = "txtReligion", @class = "required" + disableControl, @maxlength = "50" })
            <i class="fa validationResult"></i>
        </div>
        <div class="col-md-4 custom-text">
            @if (Model.IsEditable)
            {
                @Html.DropDownListFor(m => m.Community, Model.ListCommunities, new { @id = "", @class = "selectpicker show-tick required" })
                <i class="fa validationResult"></i>
            }
            else
            {
                <label>Community</label>
                @Html.TextBoxFor(m => m.CommunityName, new { @class = disableControl })
            }
        </div>
    </div>
    <div class="row custom-row clearfix">
        <div class="col-md-12 custom-text">
            @Html.LabelFor(m => m.CommunityInDetails)
            @Html.TextBoxFor(m => m.CommunityInDetails, new { @Id = "txtCaste", @class = "required" + disableControl, @maxlength = "120" })
            <i class="fa validationResult"></i>
        </div>
    </div>
    <div class="row custom-row clearfix">
        <div class="col-md-6 custom-text">
            @Html.DropDownListFor(m => m.UserProofType, Model.ListProofTypes, new { @id = "", @class = "selectpicker show-tick required" })
            <i class="fa validationResult"></i>
        </div>
        <div class="col-md-6 custom-text">
            @Html.LabelFor(m => m.UserProofType)
            @Html.TextBoxFor(m => m.UserProofType, new { @Id = "ddlProofType", @class = "required" + disableControl, @maxlength = "120" })
            <i class="fa validationResult"></i>
        </div>
    </div>
    <div class="row custom-row clearfix">
        <div class="col-md-12 custom-text">
            <input type="file" style="display: block;">
        </div>
    </div>
</div>



